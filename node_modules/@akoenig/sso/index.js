/**
 * @akoenig/sso
 *
 * Copyright, 2017, André König <hello@andrekoenig.de>
 *
 * MIT licensed
 *
 */

const session = require('express-session');
const passport = require('passport');
const FacebookStrategy = require('passport-facebook');

const sso = (app, config) => {
    app.use(session({
        resave: false,
        saveUninitialized: false,
        secret: Math.random().toString()
    }));
    app.use(passport.initialize());
    app.use(passport.session());

    passport.use(new FacebookStrategy({
        clientID: config.facebook.clientID,
        clientSecret: config.facebook.clientSecret,
        callbackURL: config.facebook.callbackURL,
    }, (accessToken, refreshToken, profile, done) => {
        done(null, profile);
    }));

    passport.serializeUser((user, cb) =>
        cb(null, user)
    );

    passport.deserializeUser((user, cb) =>
        cb(null, user)
    );

    app.get('/auth/facebook',
        passport.authenticate('facebook'));

    app.get('/auth/facebook/callback',
        passport.authenticate('facebook', {
            successRedirect: config.facebook.successRedirect,
            failureRedirect: config.facebook.failureRedirect,
        })
    );

    return () => (req, res, next) => {
        if (req.isAuthenticated()) {
            return next();
        }

        res.redirect(config.facebook.failureRedirect);
    };
};

module.exports = sso;

