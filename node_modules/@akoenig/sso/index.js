/**
 * @akoenig/sso
 *
 * Copyright, 2017, André König <hello@andrekoenig.de>
 *
 * MIT licensed
 *
 */

const session = require('express-session');
const passport = require('passport');
const cookieparser = require('cookie-parser');
const bodyparser = require('body-parser');

const { facebook } = require('./lib/facebook');
const { local } = require('./lib/local');

const sso = (app, config) => {
    app.use(cookieparser());
    app.use(bodyparser.urlencoded({ extended: true }));
    app.use(session({
        resave: false,
        saveUninitialized: false,
        secret: Math.random().toString()
    }));
    app.use(passport.initialize());
    app.use(passport.session());

    passport.serializeUser((user, cb) =>
        cb(null, user)
    );

    passport.deserializeUser((user, cb) =>
        cb(null, user)
    );

    if (config.facebook) {
        facebook(app, passport, config.facebook);
    }

    if (config.local) {
        local(app, passport, config.local);
    }

    return () => (req, res, next) => {
        if (req.isAuthenticated()) {
            return next();
        }

        res.redirect(config.facebook.failureRedirect);
    };
};

module.exports = sso;

